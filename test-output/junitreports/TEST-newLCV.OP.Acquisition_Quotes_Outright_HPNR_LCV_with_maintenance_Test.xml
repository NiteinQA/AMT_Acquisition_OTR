<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DSK-4052" failures="0" tests="9" name="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" time="517.316" errors="1" timestamp="2024-07-20T10:35:00 IST" skipped="0">
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_OTR_calculation_with_maintenance_test" time="146.967"/>
  <system-out>
    <![CDATA[<b>Clicked on Quote button </b> <br />
<b>Manufacture =FIAT has been selected</b> <br />
<b>Model range =FIORINO has been selected</b> <br />
<b>Vehicle has been selected</b> <br />
<b>Paint option has been selected</b> <br />
<b>Interior option has been selected</b> <br />
<b> Acquisition Contract type option = Outright has been selected</b> <br />
<b> Customer Contract type option = Hire Purchase Non regulated (HPNR) has been selected</b> <br />
<b>Getting Basic Price- Vehicle value is  =17895.00</b> <br />
<b>Getting Basic Price - Paint  value is  =0.00</b> <br />
<b>Getting  Basic Price - Options value is   =0.00</b> <br />
<b>Getting Discount- Vehicle value is  =0.00</b> <br />
<b>Getting   Discount - Paint value is   =0.00</b> <br />
<b>Getting  Discount- Options value is   =0.00</b> <br />
<b>Getting Additional Discount- Vehicle value is  =0.00</b> <br />
<b>Getting  Additional Discount - paint value is  =0.00</b> <br />
<b>Getting  Additional Discount - Options value is  =0.00</b> <br />
<b>Writing OTR table values to excel sheet -Started </b> <br />
<b>Writing OTR table values to excel sheet -Completed </b> <br />
<b>Reading Subtotal After Discount from excel sheet -Started </b> <br />
<b>Reading Subtotal After Discount from excel sheet -Started </b> <br />
<b>Subtotal After Discount from excel sheet is =17895.0</b> <br />
<b>Subtotal after discount actual value from screen =Â£ 17,895.00</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_after_discount_calculations_with_maintenance_test" time="4.077"/>
  <system-out>
    <![CDATA[<b>*********Calculations for On Road Price has been started***********</b> <br />
<b>Started getting On screen values from after discount table </b> <br />
<b>Manufacture_delivery_charges =695.00</b> <br />
<b>Road_tax_first_year =275.00</b> <br />
<b>First_registration_fee =65.00</b> <br />
<b>Rebate =0.00</b> <br />
<b>Writing After discount values to excel has been started</b> <br />
<b>Writing After discount values to excel has been completed</b> <br />
<b>Reading On Road Price for invoice from excel has been Started</b> <br />
<b>Reading On Road Price for invoice from excel has been completed</b> <br />
<b>Expected on the road price from excel is =22648.0</b> <br />
<b>Actual on the road price from screen is =22648.00</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_holding_cost_calculations_with_maintenance_test" time="50.515"/>
  <system-out>
    <![CDATA[<b>***********Entered in holding cost page ***********</b> <br />
<b>Clicked on holding cost summary</b> <br />
<b>Clicked on holding_cost_maintenance_toggle_button</b> <br />
<b></b> <br />
<b>***Verifying Holding Cost before editing CAP data*** </b> <br />
<b>Getting on screen values from Holding Cost Page</b> <br />
<b>Duration(Terms) =36.0</b> <br />
<b>Annual_mileage =10000.0</b> <br />
<b>Residual_value_from_screen =5825.0</b> <br />
<b>Total_cap_maintenance_value_annual =780.0</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =455.67</b> <br />
<b>Total_monthly_holding_cost_from_excel =455.66577631850146</b> <br />
<b>Total Monthly Holding Cost based on CAP data is Verified and Found OK</b> <br />
<b></b> <br />
<b>Editing % CAP Residual Value and % CAP Maintenance cost used</b> <br />
<b>Changing % CAP Residual Value (from test  data) to 50</b> <br />
<b>Changing % CAP Maintenance cost (from test  data) to 50</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =517.92</b> <br />
<b>Total_monthly_holding_cost_from_excel =517.92570038542</b> <br />
<b>Total Monthly Holding Cost After Editing % Residual Value and % Maintenance Cost is Verified and Found OK</b> <br />
<b></b> <br />
<b>Editing Residual value and Maintenance cost used</b> <br />
<b>Changing Residual Value (from test data) to  =20000</b> <br />
<b>Changing Maintenance Cost used (from test data) to =20</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =98.26</b> <br />
<b>Total_monthly_holding_cost_from_excel =98.25767663945524</b> <br />
<b>Total Monthly Holding Cost After Editing Residual Value and Maintenance Cost is Verified and Found OK</b> <br />
<b></b> <br />
<b>Editing additional terms and mileage</b> <br />
<b>Updated Residual Value from screen  (to be sent to calculation excel) is =2075.00</b> <br />
<b>Updated Maintenance Cost from screen  (to be sent to calculation excel) is =56.43</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =597.92</b> <br />
<b>Total_monthly_holding_cost_from_excel =597.9216255680631</b> <br />
<b>Total Monthly Holding Cost After Editing Additional terms and mileage is Verified and Found OK</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_customer_quote_calculations_check_monthly_finance_payment_with_maintenance_test" time="156.803"/>
  <system-out>
    <![CDATA[<b>***********Entered in Customer Quote page ***********</b> <br />
<b>Matrix credit type A1 Credit has been selected</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -started</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -completed</b> <br />
<b>Actual Monthly total Payment from screen is 761.61</b> <br />
<b>Writing screen values to Excel for customer quote calculation -started</b> <br />
<b>Writing screen values to Excel for customer quote calculation -completed</b> <br />
<b>Expected Monthly Total Rental from excel is 761.6088089076293</b> <br />
<b></b> <br />
<b>Started Verifying Sales price discount not to be greater than cost price discount</b> <br />
<b>Sales discount price entered greater than Cost discount prices and verified that sales discount input field doesn't accept greater values than cost discount prices</b> <br />
<b></b> <br />
<b>Started Updating Sales price discount</b> <br />
<b>Actual Sales Total Price from screen (on updating sales discount prices) is 22648.0</b> <br />
<b>Expected Sales Total Price from excel (on updating sales discount prices) is 22648.0</b> <br />
<b>Actual Vehicle Profit from screen (on updating sales discount prices) is 0.0</b> <br />
<b>Expected Vehicle Profit from excel (on updating sales discount prices) is 0.0</b> <br />
<b>Actual Monthly Finance Payment from screen is 691.9</b> <br />
<b>Expected Monthly Finance Payment from excel is 691.9011618488058</b> <br />
<b>Actual Monthly Maintenance Payment from screen is 69.71</b> <br />
<b>Expected Monthly Maintenance Payment from excel is 69.7076470588235</b> <br />
<b>1. Sales Total Price , 2.Vehicel Profit , 3.Monthly Finance Rental , 4.Monthly Maintenance Rental , Verified on updating sales discount and found OK</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_customer_quote_vehicle_profit_edit_check_with_maintenance_test" time="50.149"/>
  <system-out>
    <![CDATA[<b>Monthly Total Payment verified after editing vehicle profit</b> <br />
<b></b> <br />
<b>Verifying Vehicle profit and Total Monthly Payment on editing Vehicle Sales Price</b> <br />
<b>Sending 27177.6 to sales total input field</b> <br />
<b>Vehicle profit Expected is = 3774.6666666666656</b> <br />
<b>Vehicle profit Actual is = 3774.67</b> <br />
<b>Monthly Total Payment Expected is = 912.8257752994558</b> <br />
<b>Monthly Total Payment Actual is = 912.83</b> <br />
<b>Vehicle profit and Total Monthly Payment verified on editing Vehicle Sales Price</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_customer_quote_part_exchange_value_edit_check_with_maintenance_test" time="59.552"/>
  <system-out>
    <![CDATA[<b>Entering the deposit Values</b> <br />
<b></b> <br />
<b>Actual Balance to finance after editing part exchange values and deposit values is = 25177.6</b> <br />
<b>Expected Balance to finance after editing part exchange values and deposit values is = 25177.604</b> <br />
<b></b> <br />
<b>Actual Monthly total Payment after editing part exchange values and deposit values is = 846.06</b> <br />
<b>Expected Monthly total Payment after editing part exchange values and deposit values is = 846.0574810327499</b> <br />
<b></b> <br />
<b>Monthly total Payment verified after editing part exchange values and deposit values</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_customer_quote_monthly_finance_payment_after_balloon_payment_off_with_maintenance_test" time="26.197"/>
  <system-out>
    <![CDATA[<b></b> <br />
<b>Monthly Total Payment Expected (with balloon payment toggle button off) is 887.1274363184714</b> <br />
<b>Monthly Total Payment Actual (with balloon payment toggle button off) is 887.13</b> <br />
<b></b> <br />
<b>Monthly Total Payment verified after making balloon payment toggle button off</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_verify_customer_quote_monthly_finance_payment_after_adding_referrer_commission_test" time="22.802"/>
  <system-out>
    <![CDATA[<b>Referrer Commission 1420added to the referrer commission field</b> <br />
<b></b> <br />
<b>Monthly Total Payment Expected (after adding Referrer Commission) is 893.4629699621117</b> <br />
<b>Monthly Total Payment Actual (after adding Referrer Commission) is 893.46</b> <br />
<b></b> <br />
<b>Monthly Total Payment verified after adding Referrer Commission</b> <br />]]>
  </system-out>
  <testcase classname="newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test" name="aquisition_quotes_outright_HPNR_quote_summary_values_verification_with_maintenance_test" time="0.254">
    <error message="
[public void newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test.aquisition_quotes_outright_HPNR_quote_summary_values_verification_with_maintenance_test(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException,java.io.IOException,java.awt.datatransfer.UnsupportedFlavorException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: aquisition_quotes_outright_HPNR_quote_summary_values_verification_with_maintenance_test([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=10, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=11, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=12, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=13, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=14, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=15, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=16, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=17, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=18, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=19, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=20, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=21, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=22, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=23, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) FIAT,(java.lang.String) FIORINO,(java.lang.String) 50000,(java.lang.String) 630,(java.lang.String) 50,(java.lang.String) 50,(java.lang.String) 20000,(java.lang.String) 20,(java.lang.String) 0,(java.lang.String) 35,(java.lang.String) 35000,(java.lang.String) 1000,(java.lang.String) 20,(java.lang.String) YES,(java.lang.String) A1 Credit,(java.lang.String) 100,(java.lang.String) YES,(java.lang.String) 1420,(java.lang.String) 2000,(java.lang.String) 1000,(java.lang.String) 500,(java.lang.String) 1000,(java.lang.String) 1000,(java.lang.String) 199.99,(java.lang.String) HirePurchaseNonRegulated]" type="org.testng.internal.reflect.MethodMatcherException">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test.aquisition_quotes_outright_HPNR_quote_summary_values_verification_with_maintenance_test(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException,java.io.IOException,java.awt.datatransfer.UnsupportedFlavorException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: aquisition_quotes_outright_HPNR_quote_summary_values_verification_with_maintenance_test([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=10, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=11, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=12, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=13, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=14, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=15, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=16, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=17, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=18, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=19, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=20, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=21, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=22, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=23, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) FIAT,(java.lang.String) FIORINO,(java.lang.String) 50000,(java.lang.String) 630,(java.lang.String) 50,(java.lang.String) 50,(java.lang.String) 20000,(java.lang.String) 20,(java.lang.String) 0,(java.lang.String) 35,(java.lang.String) 35000,(java.lang.String) 1000,(java.lang.String) 20,(java.lang.String) YES,(java.lang.String) A1 Credit,(java.lang.String) 100,(java.lang.String) YES,(java.lang.String) 1420,(java.lang.String) 2000,(java.lang.String) 1000,(java.lang.String) 500,(java.lang.String) 1000,(java.lang.String) 1000,(java.lang.String) 199.99,(java.lang.String) HirePurchaseNonRegulated]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- aquisition_quotes_outright_HPNR_quote_summary_values_verification_with_maintenance_test -->
  <system-out/>
</testsuite> <!-- newLCV.OP.Acquisition_Quotes_Outright_HPNR_LCV_with_maintenance_Test -->
